//[ 견적 프로그램 코드 ] @강호산 

import React, { useState, useEffect } from 'react';

// 숙소 가격 및 기준 정보
// '남해' 지역과 '제천' 지역의 숙소 타입별 주중/주말/요일별 가격, 기준 인원, 최대 인원 정보가 포함됩니다.
const ACCOMMODATION_PRICING = {
  '남해': {
    'A': { weekday: 260000, weekend: 280000, baseGuests: 2, maxGuests: 4, linkUrl: 'https://sodope.co.kr/space' },
    'B': { weekday: 170000, weekend: 190000, baseGuests: 2, maxGuests: 2, linkUrl: 'https://sodope.co.kr/space' },
    'C': { weekday: 170000, weekend: 190000, baseGuests: 2, maxGuests: 2, linkUrl: 'https://sodope.co.kr/space' },
  },
  '제천': {
    '패밀리룸': {
        prices: {
            '월': 137000, '화': 137000, '수': 137000, '목': 137000, // 월~목 밤 요금
            '금': 209000, // 금요일 밤 요금 (금~토 예약 시)
            '토': 229000, // 토요일 밤 요금 (토~일 예약 시)
            '일': 137000 // 일요일 밤 요금 (다음날이 월요일이므로 주중 요금으로 간주)
        },
        baseGuests: 2, maxGuests: 4, linkUrl: 'https://www.clubes.co.kr/resort/jecheon/rooms_detail/?room_type=family'
    },
    '로얄': {
        prices: {
            '월': 195000, '화': 195000, '수': 195000, '목': 195000, // 월~목 밤 요금
            '금': 269000, // 금요일 밤 요금 (금~토 예약 시)
            '토': 279000, // 토요일 밤 요금 (토~일 예약 시)
            '일': 195000 // 일요일 밤 요금
        },
        baseGuests: 4, maxGuests: 6, linkUrl: 'https://www.clubes.co.kr/resort/jecheon/rooms_detail/?room_type=royal'
    }
  }
};

// 프리미엄 아이돌봄 서비스 관련 설정
const CHILDCARE_CONFIG = {
  // 통합된 '돌봄비용' (대관비, 재료비, 인건비 포함)
  baseChildcareCostNamhae: 150000, // 남해 아이돌봄 기본 비용 (1박 기준)
  baseChildcareCostJecheon: 140000, // 제천 아이돌봄 기본 비용 (1박 기준)
  
  baseChildcareGuests: 1, // 아이돌봄 서비스 기준인원 (1명부터 제공)
  additionalChildcareFeePerChild: 50000, // 기준인원 초과 시 1명당 추가 요금 (1박당)
  maxChildrenPerTeacher: 6, // 한 돌봄교사가 돌볼 수 있는 최대 아이 수 (교사 수 산출용)
  
  // 돌봄 서비스 시간
  hoursNamhae: "1:00 PM - 6:00 PM",
  hoursJecheon: "1:30 PM - 6:00 PM",
};

// 소셜 다이닝 설정
const SOCIAL_DINING_CONFIG = {
  costPerPerson: 30000, // 남해 소셜 다이닝 인당 비용
  menuExamples: [
    "남해 홍합밥",
    "남해 돌문어플레이트",
    "남해 참돔과 미나리지리탕"
  ]
};

// 돌봄 프로그램 상세 설명
const CHILDCARE_PROGRAM_DESCRIPTIONS = {
  '아침열기': "하루 일과를 시작하기 전 부모님과 아이들은 손뼉을 부딪치고 눈을 마주보며 온기를 나누고, 서로에게 따뜻한 응원 한마디를 전하며 기분좋은 하루를 시작해요.",
  '자연체험(은모래해변)': "맑은 공기를 마시고 새의 노랫소리를 들으며, 자연물을 통한 자유놀이로 자연을 온전히 느끼는 시간을 보내요.",
  '자연체험(숲산책)': "맑은 공기를 마시고 새의 노랫소리를 들으며, 자연물을 통한 자유놀이로 자연을 온전히 느끼는 시간을 보내요.",
  '습식수채화': "천연 재료로 만든 스토크마 물감을 사용하여 자신만의 그림을 완성해요. 그리는 동안 변화하는 색을 느끼며 예술을 통한 치유를 경험해요.",
  '수공예': "수놓기, 실팔찌, 지끈 바구니 등을 손을 이용해 만드는 시간을 가져요. 수작업을 반복하면서 소근육이 발달되고 상상력과 집중력을 발휘하며 몰입의 즐거움을 느껴요.",
  '모둠놀이': "자연에서 찾은 자연물을 가지고 실내, 실외에서 노래를 부르며 함께하는 놀이시간을 가져요. 이 시간을 통해 아이들은 친구들과 경쟁이 아닌 협력과 협동을 배워요.",
  '하루닫기': "부모님과 아이들 모두 각자의 시간을 온전히 보낸 후, 가족이 다시 모여오늘 하루의 경험들을 나누며 가족이 하나되는 시간을 가져요."
};

// 돌봄 프로그램 구성표 (지역별)
const CHILDCARE_PROGRAMS = {
  '남해': [
    "아침열기",
    "자연체험(은모래해변)",
    "습식수채화",
    "수공예",
    "모둠놀이",
    "하루닫기"
  ],
  '제천': [
    "아침열기",
    "자연체험(숲산책)",
    "습식수채화",
    "수공예",
    "모둠놀이",
    "하루닫기"
  ]
};

// 주중/주말 판별을 위한 요일 배열 (인덱스 기준)
const DAYS_OF_WEEK = ['월', '화', '수', '목', '금', '토', '일'];

// 특정 요일 밤의 숙박 가격을 가져오는 헬퍼 함수
const getPriceForNight = (location, roomType, dayOfWeek) => {
  const roomInfo = ACCOMMODATION_PRICING[location]?.[roomType];
  if (!roomInfo) return 0; // 선택된 지역 또는 룸 타입 정보 없음

  if (location === '남해') {
    // 남해는 주중/주말 구분
    const isWeekend = (dayOfWeek === '토' || dayOfWeek === '일');
    return isWeekend ? roomInfo.weekend : roomInfo.weekday;
  } else if (location === '제천') {
    // 제천은 요일별 특정 가격
    return roomInfo.prices[dayOfWeek] || 0; // 해당 요일의 가격이 없으면 0 반환
  }
  return 0; // 알 수 없는 지역
};

// App Component: Manages the main logic and UI for the quotation system.
function App() {
  // 숙소 관련 상태 정의
  const [selectedLocation, setSelectedLocation] = useState('남해'); // 기본 지역: 남해
  const [selectedRoomType, setSelectedRoomType] = useState('A'); // 기본 룸 타입: A (남해 기준)
  const [startDay, setStartDay] = useState('월'); // 숙박 시작 요일
  const [endDay, setEndDay] = useState('월');   // 숙박 종료 요일
  const [totalGuests, setTotalGuests] = useState(2); // 총 숙박 인원 (24개월 이상부터 카운트)

  // 아이돌봄 서비스 관련 상태 정의
  const [children4To12, setChildren4To12] = useState(0); // 만 4세 ~ 12세 이하 자녀 수 (아이돌봄 서비스 대상)
  const [isChildcareServiceSelected, setIsChildcareServiceSelected] = useState(false); // 아이돌봄 서비스 선택 여부
  const [selectedProgramName, setSelectedProgramName] = useState(null); // 선택된 프로그램의 이름
  const [selectedProgramDescription, setSelectedProgramDescription] = useState(null); // 선택된 프로그램의 상세 설명

  // 선택 옵션 상품 관련 상태
  const [isSocialDiningSelected, setIsSocialDiningSelected] = useState(false); // 소셜 다이닝 선택 여부

  // 최종 총 견적 금액
  const [totalEstimate, setTotalEstimate] = useState(0);
  const [accommodationOnlyCost, setAccommodationOnlyCost] = useState(0); // 숙소 단독 비용
  const [childcareOnlyCost, setChildcareOnlyCost] = useState(0); // 아이돌봄 단독 비용
  const [socialDiningOnlyCost, setSocialDiningOnlyCost] = useState(0); // 소셜 다이닝 비용

  // 선택된 지역에 따라 기본 룸 타입 초기화
  useEffect(() => {
    if (selectedLocation === '남해') {
      setSelectedRoomType('A');
    } else if (selectedLocation === '제천') {
      const jecheonRoomTypes = Object.keys(ACCOMMODATION_PRICING['제천']);
      setSelectedRoomType(jecheonRoomTypes.includes('패밀리룸') ? '패밀리룸' : jecheonRoomTypes[0]);
    }
    // 지역 변경 시 소셜 다이닝 선택 해제
    if (selectedLocation === '제천') {
        setIsSocialDiningSelected(false);
    }
    // 지역 변경 시 선택된 프로그램 설명 초기화
    setSelectedProgramName(null);
    setSelectedProgramDescription(null);
  }, [selectedLocation]);

  // 숙박 기간 계산 (총 박/일)
  const startIndex = DAYS_OF_WEEK.indexOf(startDay);
  const endIndex = DAYS_OF_WEEK.indexOf(endDay);

  let numDays = 0;
  let numNights = 0;

  if (startIndex !== -1 && endIndex !== -1) {
    if (startIndex <= endIndex) {
      numDays = endIndex - startIndex + 1;
      numNights = numDays > 0 ? numDays - 1 : 0;
    } else {
      // 시작 요일이 종료 요일보다 늦을 경우 (다음 주로 넘어가는 경우)
      numNights = (DAYS_OF_WEEK.length - startIndex) + endIndex;
      numDays = numNights + 1;
    }
  }

  // 총 견적 계산 로직: 선택된 지역, 룸 타입, 요일 범위, 인원, 아이돌봄 서비스에 따라 총 견적을 재계산합니다.
  useEffect(() => {
    let currentAccommodationCost = 0;
    let currentChildcareServiceCost = 0;
    let currentSocialDiningCost = 0;

    const locationPricing = ACCOMMODATION_PRICING[selectedLocation];
    const roomInfo = selectedRoomType ? locationPricing?.[selectedRoomType] : null;

    // 1. 숙소 가격 계산
    if (roomInfo && !roomInfo.message) {
      if (totalGuests <= roomInfo.maxGuests) {
        for (let i = 0; i < numNights; i++) {
            const currentDayIndex = (startIndex + i) % DAYS_OF_WEEK.length;
            const currentNightDay = DAYS_OF_WEEK[currentDayIndex];

            const basePriceForNight = getPriceForNight(selectedLocation, selectedRoomType, currentNightDay);
            currentAccommodationCost += basePriceForNight;

            if (totalGuests > roomInfo.baseGuests) {
                const additionalGuests = totalGuests - roomInfo.baseGuests;
                currentAccommodationCost += additionalGuests * 20000;
            }
        }
      }
    }
    setAccommodationOnlyCost(currentAccommodationCost);

    // 2. 프리미엄 아이돌봄 서비스 계산
    if (isChildcareServiceSelected && children4To12 > 0) {
        let baseChildcareCostPerNight = 0;
        if (selectedLocation === '남해') {
            baseChildcareCostPerNight = CHILDCARE_CONFIG.baseChildcareCostNamhae;
        } else if (selectedLocation === '제천') {
            baseChildcareCostPerNight = CHILDCARE_CONFIG.baseChildcareCostJecheon;
        }

        currentChildcareServiceCost += baseChildcareCostPerNight * numNights;
        
        if (children4To12 > CHILDCARE_CONFIG.baseChildcareGuests) {
            const additionalChildrenForChildcare = children4To12 - CHILDCARE_CONFIG.baseChildcareGuests;
            currentChildcareServiceCost += additionalChildrenForChildcare * CHILDCARE_CONFIG.additionalChildcareFeePerChild * numNights;
        }
    }
    setChildcareOnlyCost(currentChildcareServiceCost);

    // 3. 소셜 다이닝 비용 계산 (남해에서만)
    if (isSocialDiningSelected && selectedLocation === '남해') {
        currentSocialDiningCost = SOCIAL_DINING_CONFIG.costPerPerson * totalGuests;
    }
    setSocialDiningOnlyCost(currentSocialDiningCost);

    setTotalEstimate(currentAccommodationCost + currentChildcareServiceCost + currentSocialDiningCost);
  }, [selectedLocation, selectedRoomType, startDay, endDay, totalGuests, children4To12, isChildcareServiceSelected, isSocialDiningSelected, numNights, startIndex, endIndex]); // 이펙트 의존성 배열

  // 숙소 인원 정보 및 초과 메시지 표시
  const getAccommodationGuestInfo = () => {
    const locationPricing = ACCOMMODATION_PRICING[selectedLocation];
    const roomInfo = selectedRoomType ? locationPricing?.[selectedRoomType] : null;

    if (!roomInfo) return null; // No room info selected yet

    if (locationPricing && locationPricing[Object.keys(locationPricing)[0]]?.message) {
      return (
        <p className="text-gray-600 text-base mt-2">
          선택하신 지역 ({selectedLocation})의 숙소 가격 정보가 현재 없습니다.
        </p>
      );
    }

    // If total guests exceed max guests for the room
    if (totalGuests > roomInfo.maxGuests) {
      return (
        <p className="text-red-500 font-bold text-xl sm:text-2xl mt-2">
          최대인원을 초과하였습니다. ({totalGuests}인 / 최대 {roomInfo.maxGuests}인)
        </p>
      );
    }
    
    return (
      <p className="text-gray-700 text-base mt-2">
        기준 {roomInfo.baseGuests}인, 최대 {roomInfo.maxGuests}인 수용 가능
      </p>
    );
  };

  // Handler for total guests input change
  const handleTotalGuestsChange = (e) => {
    const value = parseInt(e.target.value) || 0;
    setTotalGuests(Math.max(1, value)); // Ensure minimum 1 guest
    if (children4To12 > value) {
      setChildren4To12(value);
    }
  };

  // Handler for children 4-12 input change
  const handleChildren4To12Change = (e) => {
    const value = parseInt(e.target.value) || 0;
    setChildren4To12(Math.min(value, totalGuests));
  };

  // 돌봄 프로그램 클릭 핸들러
  const handleProgramClick = (programName) => {
    setSelectedProgramName(programName);
    setSelectedProgramDescription(CHILDCARE_PROGRAM_DESCRIPTIONS[programName]);
  };

  // 현재 선택된 룸의 상세 설명 링크 가져오기
  const currentRoomLink = ACCOMMODATION_PRICING[selectedLocation]?.[selectedRoomType]?.linkUrl;


  return (
    <div className="min-h-screen bg-gradient-to-br from-indigo-50 to-purple-100 p-4 sm:p-6 lg:p-8 flex items-center justify-center font-sans">
      <div className="bg-white p-6 sm:p-8 md:p-10 rounded-3xl shadow-xl w-full max-w-4xl border border-gray-200">
        <h1 className="text-3xl sm:text-4xl font-extrabold text-center text-indigo-800 mb-8 sm:mb-10">
          ✨ 숙소 및 아이돌봄 견적 계산기 ✨
        </h1>

        {/* 지역 선택 섹션 */}
        <div className="mb-6 bg-blue-50 p-4 sm:p-6 rounded-2xl border border-blue-200 shadow-sm">
          <h2 className="text-xl sm:text-2xl font-bold text-blue-700 mb-4 pb-2 border-b border-blue-300">
            지역 선택
          </h2>
          <div className="flex flex-wrap gap-4">
            {Object.keys(ACCOMMODATION_PRICING).map(location => (
              <label key={location} className="flex items-center p-3 bg-white rounded-xl shadow-md cursor-pointer hover:bg-blue-100 transition-all duration-200 border border-gray-100">
                <input
                  type="radio"
                  name="location"
                  value={location}
                  checked={selectedLocation === location}
                  onChange={(e) => setSelectedLocation(e.target.value)}
                  className="form-radio h-5 w-5 text-blue-600 rounded-full focus:ring-blue-500 mr-2"
                />
                <span className="text-base sm:text-lg font-medium text-gray-800">{location}</span>
              </label>
            ))}
          </div>
        </div>

        {/* 숙소 타입, 숙박 요일, 인원 선택 섹션 */}
        {selectedLocation && ACCOMMODATION_PRICING[selectedLocation] && (
          <div className="mb-6 bg-purple-50 p-4 sm:p-6 rounded-2xl border border-purple-200 shadow-sm">
            <h2 className="text-xl sm:text-2xl font-bold text-purple-700 mb-4 pb-2 border-b border-purple-300">
              숙소 선택 및 인원
            </h2>
            {ACCOMMODATION_PRICING[selectedLocation][Object.keys(ACCOMMODATION_PRICING[selectedLocation])[0]].message ? (
              <div className="bg-red-50 p-4 rounded-xl border border-red-200 text-red-700">
                <p>선택하신 지역 ({selectedLocation})의 숙소 가격 정보가 현재 없습니다.</p>
              </div>
            ) : (
              <>
                {/* 룸 타입 선택 */}
                <div className="mb-4">
                  <span className="block text-gray-700 text-lg font-semibold mb-2">룸 타입:</span>
                  <div className="flex flex-wrap gap-4">
                    {Object.keys(ACCOMMODATION_PRICING[selectedLocation]).map(roomType => (
                      <label key={roomType} className="flex items-center p-3 bg-white rounded-xl shadow-md cursor-pointer hover:bg-purple-100 transition-all duration-200 border border-gray-100">
                        <input
                          type="radio"
                          name="roomType"
                          value={roomType}
                          checked={selectedRoomType === roomType}
                          onChange={(e) => setSelectedRoomType(e.target.value)}
                          className="form-radio h-5 w-5 text-purple-600 rounded-full focus:ring-purple-500 mr-2"
                        />
                        <span className="text-base sm:text-lg font-medium text-gray-800">{roomType}</span>
                      </label>
                    ))}
                  </div>
                </div>

                {/* 숙소 정보 (기준/최대 인원 및 링크) */}
                {/* Removed flex-col items-center to allow left alignment and better flow */}
                <div className="mb-4">
                    {getAccommodationGuestInfo()} {/* 기준/최대 인원 및 인원 초과 메시지 표시 */}
                    {currentRoomLink && (
                        <a
                            href={currentRoomLink}
                            target="_blank"
                            rel="noopener noreferrer"
                            className="mt-2 text-purple-600 hover:text-purple-800 font-semibold text-base sm:text-lg underline transition-colors duration-200 block"
                        >
                            숙소 자세히 보기
                        </a>
                    )}
                </div>

                {/* 숙박 요일 선택 (시작 요일 ~ 종료 요일) */}
                <div className="mb-4">
                  <span className="block text-gray-700 text-lg font-semibold mb-2">숙박 요일:</span>
                  <div className="flex flex-wrap gap-4 items-center">
                    <select
                      value={startDay}
                      onChange={(e) => setStartDay(e.target.value)}
                      className="p-3 border border-gray-300 rounded-lg shadow-sm focus:ring-purple-500 focus:border-purple-500 text-lg"
                    >
                      {DAYS_OF_WEEK.map(day => (
                        <option key={`start-${day}`} value={day}>{day}</option>
                      ))}
                    </select>
                    <span className="text-lg font-bold text-gray-700">~</span>
                    <select
                      value={endDay}
                      onChange={(e) => setEndDay(e.target.value)}
                      className="p-3 border border-gray-300 rounded-lg shadow-sm focus:ring-purple-500 focus:border-purple-500 text-lg"
                    >
                      {DAYS_OF_WEEK.map(day => (
                        <option key={`end-${day}`} value={day}>{day}</option>
                      ))}
                    </select>
                    <span className="text-lg font-semibold text-gray-800 ml-4">
                      총 {numNights}박 {numDays}일
                    </span>
                  </div>
                </div>

                {/* 숙박 인원 입력 */}
                <div className="mb-4">
                  <label htmlFor="total-guests" className="block text-gray-700 text-lg font-semibold mb-2">
                    총 숙박 인원 (24개월 이상부터 카운트):
                  </label>
                  <input
                    type="number"
                    id="total-guests"
                    min="1"
                    value={totalGuests}
                    onChange={handleTotalGuestsChange}
                    className="w-full sm:w-auto p-3 border border-gray-300 rounded-lg shadow-sm focus:ring-purple-500 focus:border-purple-500 text-lg"
                  />
                </div>
              </>
            )}
          </div>
        )}

        {/* 프리미엄 아이돌봄 서비스 섹션 */}
        <div className="mb-6 bg-green-50 p-4 sm:p-6 rounded-2xl border border-green-200 shadow-sm">
          <h2 className="text-xl sm:text-2xl font-bold text-green-700 mb-4 pb-2 border-b border-green-300">
            프리미엄 아이돌봄 서비스
          </h2>
          <label className="flex items-center p-3 sm:p-4 bg-white rounded-xl shadow-md cursor-pointer hover:bg-green-100 transition-all duration-200 ease-in-out border border-gray-100 mb-4">
            <input
              type="checkbox"
              checked={isChildcareServiceSelected}
              onChange={(e) => setIsChildcareServiceSelected(e.target.checked)}
              className="form-checkbox h-5 w-5 sm:h-6 sm:w-6 text-green-600 rounded-md focus:ring-green-500 transition duration-150 ease-in-out mr-3"
            />
            <div className="flex flex-col flex-grow">
              <span className="text-base sm:text-lg font-medium text-gray-800">
                아이돌봄 서비스 신청
              </span>
              <span className="text-sm sm:text-base text-gray-600">
                * 만 4세 ~ 12세 이하 자녀에게만 해당
              </span>
            </div>
          </label>

          {isChildcareServiceSelected && (
            <div className="mt-4 p-4 bg-green-100 rounded-xl border border-green-300">
              {/* 항목 순서 변경 반영 START */}
              <div className="mb-4">
                <label htmlFor="children-4-12" className="block text-gray-700 text-lg font-semibold mb-2">
                  돌봄이 필요한 만 4세 ~ 만 12세 이하 자녀 수:
                </label>
                <input
                  type="number"
                  id="children-4-12"
                  min="0"
                  value={children4To12}
                  onChange={handleChildren4To12Change}
                  className="w-full sm:w-auto p-3 border border-gray-300 rounded-lg shadow-sm focus:ring-green-500 focus:border-green-500 text-lg"
                />
                {children4To12 > totalGuests && (
                  <p className="text-red-500 text-sm mt-1">자녀 수는 총 숙박 인원을 초과할 수 없습니다.</p>
                )}
                {children4To12 === 0 && isChildcareServiceSelected && (
                    <p className="text-orange-500 text-sm mt-1">아이돌봄 서비스를 선택했지만, 돌봄이 필요한 자녀 수가 0명입니다.</p>
                )}
              </div>

              <p className="text-md font-bold text-gray-700 mb-2">
                돌봄 서비스 시간: {selectedLocation === '남해' ? CHILDCARE_CONFIG.hoursNamhae : CHILDCARE_CONFIG.hoursJecheon}
              </p>
              <p className="text-red-600 font-bold text-md sm:text-lg mb-2">
                * 돌봄비용은 돌봄 대관비, 프로그램 재료비, 교사 인건비가 포함된 금액입니다.
              </p>
              {/* 항목 순서 변경 반영 END */}

              {children4To12 > 0 && (
                <div className="mt-4 p-4 bg-green-200 rounded-xl border border-green-400 text-gray-800">
                  <h3 className="text-lg font-bold mb-2">돌봄 프로그램 구성표: 발도르프 프리미엄 돌봄</h3>
                  <p className="text-sm text-gray-700 mb-3">
                    모든 프로그램이 진행됩니다. 아래 셀을 눌러 상세 설명을 확인하세요.
                  </p>
                  <div className="grid grid-cols-2 sm:grid-cols-3 gap-2 mb-4">
                    {CHILDCARE_PROGRAMS[selectedLocation]?.map((programName) => (
                      <div
                        key={programName}
                        className={`p-3 rounded-lg cursor-pointer text-center text-sm font-medium transition-all duration-200
                          ${selectedProgramName === programName ? 'bg-green-600 text-white shadow-lg' : 'bg-white hover:bg-green-100 text-gray-800 shadow-sm border border-gray-200'}`}
                        onClick={() => handleProgramClick(programName)}
                      >
                        {programName}
                      </div>
                    ))}
                  </div>

                  {selectedProgramDescription && (
                    <div className="mt-4 p-3 bg-green-100 rounded-lg border border-green-300">
                      <p className="text-sm font-semibold mb-1">{selectedProgramName} 설명:</p>
                      <p className="text-sm">{selectedProgramDescription}</p>
                    </div>
                  )}

                  <h3 className="text-lg font-bold mt-4 mb-2">돌봄 비용 안내</h3>
                  <p className="mb-1">
                      - 기본 돌봄비용 ({selectedLocation === '남해' ? '남해' : '제천'}):
                      {(selectedLocation === '남해' ? CHILDCARE_CONFIG.baseChildcareCostNamhae : CHILDCARE_CONFIG.baseChildcareCostJecheon).toLocaleString('ko-KR')}원 (1박 기준)
                  </p>
                  {children4To12 > CHILDCARE_CONFIG.baseChildcareGuests && (
                    <p className="mb-1">
                        - 인원 추가 비용 ({children4To12 - CHILDCARE_CONFIG.baseChildcareGuests}명):
                        {CHILDCARE_CONFIG.additionalChildcareFeePerChild.toLocaleString('ko-KR')}원 (1박당)
                    </p>
                  )}
                  <p className="text-sm text-gray-600 mt-2">
                      (돌봄교사 {Math.max(1, Math.ceil(children4To12 / CHILDCARE_CONFIG.maxChildrenPerTeacher))}명 필요)
                  </p>
                </div>
              )}
            </div>
          )}
        </div>

        {/* 선택 옵션 상품 섹션 */}
        <div className="mb-6 bg-yellow-50 p-4 sm:p-6 rounded-2xl border border-yellow-200 shadow-sm">
          <h2 className="text-xl sm:text-2xl font-bold text-yellow-700 mb-4 pb-2 border-b border-yellow-300">
            선택 옵션 상품
          </h2>
          {selectedLocation === '남해' ? (
            <>
              <label className="flex items-center p-3 sm:p-4 bg-white rounded-xl shadow-md cursor-pointer hover:bg-yellow-100 transition-all duration-200 ease-in-out border border-gray-100 mb-4">
                <input
                  type="checkbox"
                  checked={isSocialDiningSelected}
                  onChange={(e) => setIsSocialDiningSelected(e.target.checked)}
                  className="form-checkbox h-5 w-5 sm:h-6 sm:w-6 text-yellow-600 rounded-md focus:ring-yellow-500 transition duration-150 ease-in-out mr-3"
                />
                <div className="flex flex-col flex-grow">
                  <span className="text-base sm:text-lg font-medium text-gray-800">
                    소셜 다이닝 (인당 {SOCIAL_DINING_CONFIG.costPerPerson.toLocaleString('ko-KR')}원)
                  </span>
                  <span className="text-sm sm:text-base text-gray-600">
                    * 시기별 메뉴에 따라 재료 구성이 달라질 수 있습니다.
                  </span>
                </div>
              </label>

              {isSocialDiningSelected && (
                <div className="mt-4 p-4 bg-yellow-100 rounded-xl border border-yellow-300 text-gray-800">
                  <h3 className="text-lg font-bold mb-2">소셜 다이닝 메뉴 예시</h3>
                  <ul className="list-disc list-inside ml-4">
                    {SOCIAL_DINING_CONFIG.menuExamples.map((menu, index) => (
                      <li key={index} className="text-sm">{menu}</li>
                    ))}
                  </ul>
                  <p className="text-md font-bold mt-2">
                    총 소셜 다이닝 비용: {socialDiningOnlyCost.toLocaleString('ko-KR')}원
                  </p>
                </div>
              )}
            </>
          ) : (
            <p className="text-gray-600 italic">
              선택하신 지역 ({selectedLocation})에는 현재 제공되는 선택 옵션 상품이 없습니다.
            </p>
          )}
        </div>


        {/* 최종 견적 금액 표시 섹션 */}
        <div className="mt-8 pt-6 border-t-2 border-indigo-300 text-center">
          <p className="text-2xl sm:text-3xl font-extrabold text-indigo-900">
            총 견적: <span className="text-purple-600">{totalEstimate.toLocaleString('ko-KR')}원</span>
          </p>
          <p className="text-sm text-gray-500 mt-2">
            선택된 숙소, 아이돌봄 서비스, 선택 옵션 상품들의 총합입니다.
          </p>
        </div>
      </div>
    </div>
  );
}

export default App;
